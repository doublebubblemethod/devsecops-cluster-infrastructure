pipeline {
  agent {
    kubernetes {
      yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: Always
    command: ["sleep"]
    args: ["99d"]
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
    workdir: /home/jenkins/agent/
    volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
  - name: trivy
    image: aquasec/trivy
    command: ["trivy", "server", "--cache-dir", "/data/cache"]
    volumeMounts:
    - name: cache
      mountPath: /data/cache
  volumes:
  - name: cache
    persistentVolumeClaim:
      claimName: trivy-pv-claim
  - name: kaniko-secret
    projected:
      sources:
      - secret:
          name: kaniko-secret
          items:
            - key: .dockerconfigjson
              path: config.json
'''
    }
  }
  parameters {
    string(
      name: 'APP_CODEBASE',
      defaultValue: 'https://github.com/doublebubblemethod/petclinic-orchestrated.git',
      description: 'GIT URL of Petclinic repository'
    )
    }
  stages {
    stage('Clean Workspace') { steps { cleanWs() } }

    stage('Checkout Code') {
      steps {
        git url: "${params.APP_CODEBASE}",
            branch: 'main'
      }
    }
    stage('Build with Kaniko') {
      steps {
       container('kaniko') {
            sh '''#!/bin/sh -xe
            pwd; ls -la
             /kaniko/executor \
              --dockerfile "$(pwd)/Dockerfile" \
              --context "$(pwd)" \
               --destination=askdragon/petclinic:${BUILD_NUMBER}
            '''
        }
      }
    }
    stage('Scan Docker Image') {
        steps {
            container('trivy') {
            sh '''#!/bin/sh -xe
                trivy image --docker-host string askdragon/petclinic:17 --output trivy-report-petclinic.txt
                cat trivy-report-petclinic.txt
            '''    
            }
        }
    }
    stage('Archive Trivy Report') {
        steps {
            archiveArtifacts artifacts: 'trivy-report-petclinic.txt', allowEmptyArchive: true
        }
    }
  }
  post {
    success { 
        echo "✅ Done" 
        emailext attachLog: true,
        subject: "'${currentBuild.result}'",
        body: "Project Petclinic: ${env.JOB_NAME}<br/>" +
              "Build Number: ${env.BUILD_NUMBER}<br/>" +
              "URL: ${env.BUILD_URL}<br/>",
        to: 'mercergladys4@gmail.com', attachmentsPattern: 'trivy-report-petclinic.txt'
    }
    
    failure { echo "❌ Failed" }
  }
}
