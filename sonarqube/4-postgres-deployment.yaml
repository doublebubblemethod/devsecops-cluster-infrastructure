apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: sonar
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
      - name: init-postgres
        image: busybox
        command: ['sh', '-c', 'if [ "$(ls -A /var/lib/postgresql/data)" ]; then rm -rf /var/lib/postgresql/data/*; fi']
        volumeMounts:
        - name: postgredb
          mountPath: /var/lib/postgresql/data
      containers:
        - name: postgres
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
           - name: POSTGRES_USER
             valueFrom:
               secretKeyRef:
                 name: postgres-secrets
                 key: username
           - name: POSTGRES_PASSWORD
             valueFrom:
               secretKeyRef:
                 name: postgres-secrets
                 key: password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-nfs-pvc
